
@{
    ViewData["Title"] = "Statistics";
}
<h1>Statistics</h1>
<div style="display: flex">
    <div>
        <svg id="language" width="600" height="500"></svg>
        <ul id="pieChartTitle">Movie's Language Statistics</ul>
    </div>
    <div>
        <svg id="genre" width="600" height="500"></svg>
        <ul id="pieChartTitle">Movie's Ganers Statistics</ul>
    </div>
</div>


@section scripts{
    <script src="https://d3js.org/d3.v5.min.js"></script>
    <script type="text/javascript">
        $(function () {
            $.ajax('Statistics/LanguageStatistics/').done(function (grouped_Movies) {
                var svg = d3.select("#language"),
                    margin = 200,
                    width = svg.attr("width") - margin,
                    height = svg.attr("height") - margin

                svg.append("text")
                    .attr("transform", "translate(100,0)")
                    .attr("x", 50)
                    .attr("y", 50)
                    .attr("font-size", "24px")
                    .text("Language By Movie's Count Statistics")

                var xScale = d3.scaleBand().range([0, width]).padding(0.4),
                    yScale = d3.scaleLinear().range([height, 0]);

                var g = svg.append("g")
                    .attr("transform", "translate(" + 100 + "," + 100 + ")");

                xScale.domain(grouped_Movies.map(function (d) {
                    return d.language;
                }));
                yScale.domain([0, d3.max(grouped_Movies, function (d) {
                    return d.count;
                })]);

                g.append("g")
                    .attr("transform", "translate(0," + height + ")")
                    .call(d3.axisBottom(xScale))
                    .append("text")
                    .attr("y", height - 250)
                    .attr("x", width - 100)
                    .attr("text-anchor", "end")
                    .attr("stroke", "black")
                    .text("Language");

                g.append("g")
                    .call(d3.axisLeft(yScale).tickFormat(function (d) {
                        return d;
                    })
                        .ticks(10))
                    .append("text")
                    .attr("transform", "rotate(-90)")
                    .attr("y", 6)
                    .attr("dy", "-5.1em")
                    .attr("text-anchor", "end")
                    .attr("stroke", "black")
                    .text("Count");

                g.selectAll(".bar")
                    .data(grouped_Movies)
                    .enter().append("rect")

                    .style("fill", "steelblue")
                    .attr("class", "bar")
                    .attr("x", function (d) {
                        return xScale(d.language);
                    })
                    .attr("y", function (d) {
                        return yScale(d.count);
                    })
                    .attr("width", xScale.bandwidth())
                    .attr("height", function (d) {
                        return height - yScale(d.count);
                    });
            });
        });
    </script>
    <script type="text/javascript">
        $(function () {
            $.ajax('Statistics/GenersStatistics/').done(function (grouped_Movies) {
                var svg = d3.select("#genre"),
                    margin = 200,
                    width = svg.attr("width") - margin,
                    height = svg.attr("height") - margin

                svg.append("text")
                    .attr("transform", "translate(100,0)")
                    .attr("x", 50)
                    .attr("y", 50)
                    .attr("font-size", "24px")
                    .text("Genre By Movie's Count Statistics")

                var xScale = d3.scaleBand().range([0, width]).padding(0.4),
                    yScale = d3.scaleLinear().range([height, 0]);

                var g = svg.append("g")
                    .attr("transform", "translate(" + 100 + "," + 100 + ")");

                xScale.domain(grouped_Movies.map(function (d) {
                    return d.genre;
                }));
                yScale.domain([0, d3.max(grouped_Movies, function (d) {
                    return d.count;
                })]);

                g.append("g")
                    .attr("transform", "translate(0," + height + ")")
                    .call(d3.axisBottom(xScale))
                    .append("text")
                    .attr("y", height - 250)
                    .attr("x", width - 100)
                    .attr("text-anchor", "end")
                    .attr("stroke", "black")
                    .text("Genre");

                g.append("g")
                    .call(d3.axisLeft(yScale).tickFormat(function (d) {
                        return d;
                    })
                        .ticks(10))
                    .append("text")
                    .attr("transform", "rotate(-90)")
                    .attr("y", 6)
                    .attr("dy", "-5.1em")
                    .attr("text-anchor", "end")
                    .attr("stroke", "black")
                    .text("Count");

                g.selectAll(".bar")
                    .data(grouped_Movies)
                    .enter().append("rect")

                    .style("fill", "steelblue")
                    .attr("class", "bar")
                    .attr("x", function (d) {
                        return xScale(d.genre);
                    })
                    .attr("y", function (d) {
                        return yScale(d.count);
                    })
                    .attr("width", xScale.bandwidth())
                    .attr("height", function (d) {
                        return height - yScale(d.count);
                    });
            });
        });
    </script>
}